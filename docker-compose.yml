version: '3.6'

services:
  tds:
    image: unidata/thredds-docker:latest
    #ports:
    #  - "80:8080"
    #  - "443:8443"
    #  - "8443:8443"
    container_name: ${COMPOSE_PROJECT_NAME}-tds
    volumes:
        - type: tmpfs
          target: /tmp
        - type: tmpfs
          target: /usr/local/tomcat/temp
        - type: volume
          source: webapps
          target: /usr/local/tomcat/webapps
        #- type: volume
        #  source: conf
        #  target: /usr/local/tomcat/conf/Catalina/localhost
        - type: bind
          source: ./server.xml
          target: /usr/local/tomcat/conf/server.xml
        - type: bind
          source: ./tomcat-users.xml
          target: /usr/local/tomcat/conf/tomcat-users.xml
        - type: bind
          source: /docker/010-ngnix-proxy/data/certs/thredds.myclimateservice.eu/fullchain.pem
          target: /usr/local/tomcat/conf/ssl.crt
        - type: bind
          source: /docker/010-ngnix-proxy/data/certs/thredds.myclimateservice.eu/key.pem
          target: /usr/local/tomcat/conf/ssl.key
        #- type: bind
        #  source: /docker/010-ngnix-proxy/data/certs/thredds.myclimateservice.eu.crt
        #  target: /usr/local/tomcat/conf/ssl.crt
        #- type: bind
        #  source: /docker/010-ngnix-proxy/data/certs/thredds.myclimateservice.eu.key
        #  target: /usr/local/tomcat/conf/ssl.key
        - type: bind
          source: ./logs/
          target: /usr/local/tomcat/logs/
        - type: bind
          source: ./tds
          target: /usr/local/tomcat/content/thredds
        - type: bind
          source: ./data
          target: /data
    env_file:
      - "compose.env"
    environment:
        - VIRTUAL_HOST=${VIRTUAL_HOST}
        - VIRTUAL_PORT=${VIRTUAL_PORT:-8080}
        - LETSENCRYPT_HOST=${LETSENCRYPT_HOST}
        - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
  ###
  # TDM
  # Not strictly part of this repo, but useful to have around
  # https://github.com/Unidata/tdm-docker
  ###

  tdm:
    image: unidata/tdm-docker:latest
    container_name: ${COMPOSE_PROJECT_NAME}-tdm
    volumes:
        - type: tmpfs
          target: /tmp
        - type: tmpfs
          target: /usr/local/tomcat/temp
        - type: volume
          source: webapps
          target: /usr/local/tomcat/webapps
        #- type: volume
        #  source: conf
        #  target: /usr/local/tomcat/conf/Catalina/localhost
        - type: bind
          source: ./server.xml
          target: /usr/local/tomcat/conf/server.xml
        - type: bind
          source: ./tomcat-users.xml
          target: /usr/local/tomcat/conf/tomcat-users.xml
        - type: bind
          source: /docker/010-ngnix-proxy/data/certs/thredds.myclimateservice.eu/fullchain.pem
          target: /usr/local/tomcat/conf/ssl.crt
        - type: bind
          source: /docker/010-ngnix-proxy/data/certs/thredds.myclimateservice.eu/key.pem
          target: /usr/local/tomcat/conf/ssl.key
        - type: bind
          source: ./tds
          target: /usr/local/tomcat/content/thredds
        - type: bind
          source: ./data
          target: /data
          # TDM logging non-configurable until 5.0 so you'll need tdm.sh and
          # tdm.jar if you want to log outside the container :-(
        - type: bind
          source: ./tdm
          target: /usr/local/tomcat/content/tdm
    env_file:
      - "compose.env"
      
volumes:
    conf:
        name: ${COMPOSE_PROJECT_NAME}_tomcat_conf
        driver: local
    webapps:
        name: ${COMPOSE_PROJECT_NAME}_tomcat_webapps
        driver: local
      
networks:
    default:
        external:
            name: ${NETWORK:-clarity}
